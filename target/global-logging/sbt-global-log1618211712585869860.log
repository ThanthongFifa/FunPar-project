[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 18.0.1.1)
[debug]       Load.loadUnit: plugins took 73.983021ms
[debug]       Load.loadUnit: defsScala took 0.286226ms
[debug] [Loading] Scanning directory /home/seaweed/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/seaweed/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.086908 ms
[debug]           Load.resolveProject(global-plugins) took 40.103411ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/seaweed/.sbt/1.0/plugins, plugins: List(<none>))) took 79.83783ms
[debug] [Loading] Done in /home/seaweed/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 101.795648ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.265232ms
[debug]     Load.loadUnit(file:/home/seaweed/.sbt/1.0/plugins/, ...) took 185.519283ms
[debug]   Load.apply: load took 340.143531ms
[debug]   Load.apply: resolveProjects took 5.611302ms
[debug]   Load.apply: finalTransforms took 74.592451ms
[debug]   Load.apply: config.delegates took 7.410547ms
[debug]   Load.apply: Def.make(settings)... took 388.243314ms
[debug]   Load.apply: structureIndex took 140.791393ms
[debug]   Load.apply: mkStreams took 1.490835ms
[info] loading global plugins from /home/seaweed/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4179.81034ms
[debug]           Load.loadUnit: plugins took 20.704729ms
[debug]           Load.loadUnit: defsScala took 0.00395ms
[debug] [Loading] Scanning directory /home/seaweed/Documents/GitHub/FunPar-project/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/seaweed/Documents/GitHub/FunPar-project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.354269 ms
[debug]               Load.resolveProject(funpar-project-build) took 1.324586ms
[debug]             Load.loadTransitive: finalizeProject(Project(id funpar-project-build, base: /home/seaweed/Documents/GitHub/FunPar-project/project, plugins: List(<none>))) took 4.457762ms
[debug] [Loading] Done in /home/seaweed/Documents/GitHub/FunPar-project/project, returning: (funpar-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6.270382ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.017718ms
[debug]         Load.loadUnit(file:/home/seaweed/Documents/GitHub/FunPar-project/project/, ...) took 27.72843ms
[debug]       Load.apply: load took 29.670178ms
[debug]       Load.apply: resolveProjects took 0.137227ms
[debug]       Load.apply: finalTransforms took 14.254803ms
[debug]       Load.apply: config.delegates took 0.416641ms
[debug]       Load.apply: Def.make(settings)... took 85.390253ms
[debug]       Load.apply: structureIndex took 31.792809ms
[debug]       Load.apply: mkStreams took 0.003809ms
[info] loading project definition from /home/seaweed/Documents/GitHub/FunPar-project/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 402.378115ms
[debug]     Load.loadUnit: defsScala took 0.00518ms
[debug] [Loading] Scanning directory /home/seaweed/Documents/GitHub/FunPar-project
[debug]       Load.loadUnit: mkEval took 4.811998ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.447455 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.163457ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/seaweed/Documents/GitHub/FunPar-project, plugins: List(<none>))) took 4.686355ms
[debug] [Loading] Done in /home/seaweed/Documents/GitHub/FunPar-project, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2378.97985ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.512137ms
[debug]   Load.loadUnit(file:/home/seaweed/Documents/GitHub/FunPar-project/, ...) took 2784.557748ms
[debug] Load.apply: load took 2786.504981ms
[debug] Load.apply: resolveProjects took 0.101719ms
[debug] Load.apply: finalTransforms took 7.558593ms
[debug] Load.apply: config.delegates took 0.310987ms
[debug] Load.apply: Def.make(settings)... took 56.495549ms
[debug] Load.apply: structureIndex took 28.94368ms
[debug] Load.apply: mkStreams took 0.00337ms
[info] set current project to FunPar-project (in build file:/home/seaweed/Documents/GitHub/FunPar-project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/seaweed/.sbt/1.0/server/cae2400762605a86717f/sock
[debug] Writing bsp connection file
[info] started sbt server
